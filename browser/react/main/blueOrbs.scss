// Orb dimentions
$orb_radius: 8vw;
// Orb screen offset
$std_offset: 20vw;

// Only set variables ABOVE this line

// Due to img of orb being square translate dimensions so we can treat them like a circle
$orb-width: $orb-radius;
$orb_height: $orb_radius;
$orb_radius_offset: -1* 0.5 * $orb_width;

// This container is used center the orbs.
// Re-positions them by the radius of the orb in x and y
#orb-container {
	height: 100vh;
	width: 100vw;
	position: absolute;
	transform: translate( $orb_radius_offset, $orb_radius_offset);
}

.box {
  position: absolute;
  top: 50%;
  left: 50%;
  width: $orb_width;
  height: $orb_width;
}

// Screen offsets for orbs
$orb0_Y-offset: -1 * $std_offset;
$orb1_X-offset: $std_offset;
$orb2_Y-offset: $std_offset;
$orb3_X-offset: -1 * $std_offset;

@mixin translateX($dist){ transform: translateX($dist); }
@mixin translateY($dist){ transform: translateY($dist); }

.blueOrb0 { @include translateY($orb0_Y-offset); }
.blueOrb1 { @include translateX($orb1_X-offset); }
.blueOrb2 { @include translateY($orb2_Y-offset); }
.blueOrb3 { @include translateX($orb3_X-offset); }

@mixin keyframe_rotate($x){
	0% 		{ transform: rotate(0deg) translateX($x) rotate(0deg) }
	100%	{ transform: rotate(360deg) translateX($x) rotate(-360deg) }
}

@mixin orb-animate { animation: rotateLeft 2s linear 3; }

// Orb animations
@keyframes rotateLeft { @include keyframe_rotate($orb3_X-offset); }
.box.rotateLeft { @include orb-animate }

